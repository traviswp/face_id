function llh = LogLikelihood(X, k, means, covariances, mcoefficients)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Compute the loglikelihood over all points & clusters
%
% > Note: Likelihood is the probability that the data X was generated by the 
% parameters you found (i.e. a measure of correctness). 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% > Note: a possible error with computing covariances is fixed by adding this
% small value and recomputing the cov. 
covDataFix = 0.0000001;

% % For each data point...
% for i = 1:size(X,1)
%     
%     % For each cluster...
%     likelihood = 0;
%     for c = 1:k
%         
%         % Compute the normal distribution for point i with cluster c data
%         % > Note: we could just add the covDataFix first and never wait for 
%         %   the error to crop up - if we are modifying the covariance for each
%         %   cluster than every data pt. is treated equally...
%         try
%             y = mvnpdf(X(i,:), means(c,:), covariances{c,:});
%         catch error
%             covariances{c,:} = covariances{c,:} + covDataFix;
%             y = mvnpdf(X(i,:), means(c,:), covariances{c,:});
%         end
%         likelihood = likelihood + mcoefficients(c,1) * y;
%     end
%     
%     % Compute the log of the likelihood
%     loglikelihood = loglikelihood + log(likelihood);
% 
% end

% For each cluster...
likelihood = 0;
for c = 1:k
    
    % Compute the normal distribution for point i with cluster c data
    % > Note: we could just add the covDataFix first and never wait for
    %   the error to crop up - if we are modifying the covariance for each
    %   cluster than every data pt. is treated equally...
    try
        Y = mvnpdf(X, means(c,:), covariances{c,:});
    catch error
        covariances{c,:} = covariances{c,:} + covDataFix;
        try
            Y = mvnpdf(X, means(c,:), covariances{c,:});
        catch err
            Y = mvnpdf(X, means(c,:), covariances{c,:});
        end
    end
    likelihood = likelihood + mcoefficients(c) * Y;
end

% Compute the log of the likelihood
llh = sum(log(likelihood));
